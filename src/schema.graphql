directive @private(requires: Permission = ADMIN) on FIELD_DEFINITION

type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  me: User
  ads(adFeaturesIDs: [String]): [Ad!]
  ad(id: ID!): Ad
  suggestions(id: ID!): [OfferPosition]
  car(id: ID!): Car
  carCategories: [CarCategory]
  carFeatureCategory(name: String!): CarFeatureCategory
  carFeatureCategories: [CarFeatureCategory]
  manufacturers: [Manufacturer]
  offer(id: ID!): Offer
  offerAddons: [OfferAddon!]
}

type Mutation {
  signup(data: UserSignupInput!): User!
  login(email: String!, password: String!): User!
  facebookLogin(data: UserSignupInput!): User!
  googleLogin(data: UserSignupInput!): User!
  logout: String!
  updateUser(data: UserUpdateInput!): User!
  createDraft(title: String!, content: String!): Post!
  createCar(data: CarCreateInput!): Car
  deleteCar(id: ID!): Car
  createAd(data: AdCreateInput!): Ad
  updateAd(data: AdUpdateInput!): Ad
  deleteAd(id: ID!): Ad
  publish(id: ID!): Post!
  deletePost(id: ID!): Post!
  resetPasswordRequest(email: String!): String!
  resetPassword(resetToken: String!, password: String!): User!
  createOffer(data: OfferCreateInput!): Offer
  updateOffer(data: OfferUpdateInput!): Offer
  deleteOffer(id: ID!): Offer
  createConversation(offerID: ID!): Conversation!
  sendMessage(data: SendMessageInput): Message!
}

# USER
# ------------------------------------------------------

type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  location: String!
  birthDate: Date!
  gender: Gender!
  permissions: [Permission!]!
  facebookID: String
  googleID: String
  offers: [Offer!]!
  ads: [Ad!]!
  cars: [Car!]!
  conversations: [Conversation!]
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Permission {
  USER
  PREMIUM
  ADMIN
}

input UserSignupInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  location: String!
  birthDate: DateInput!
  gender: Gender!
  permissions: [Permission!]
  facebookID: String
  googleID: String
}

input UserUpdateInput {
  id: ID!
  email: String
  firstName: String
  lastName: String
  password: String
  location: String
  birthDate: DateInput
  gender: Gender
  permissions: [Permission!]
}

# Cars
# ------------------------------------------------------

type Car {
  id: ID!
  owner: User @private
  manufacturer: Manufacturer!
  model: CarModel!
  category: CarCategory!
  year: Int!
  mileage: Int!
  photos: [String!]!
  features: [CarFeature!]!
  status: CarStatus!
  offers: [Offer!]
}

enum CarStatus {
  PUBLISHED
  SOLD
  DELETED
}

type CarCategory {
  id: ID!
  name: String!
}

type CarFeatureCategory {
  id: ID!
  name: String!
  type: CarFeatureType!
  features: [CarFeature!]!
}

type CarFeature {
  id: ID!
  name: String!
  category: CarFeatureCategory!
}

enum CarFeatureType {
  TRUE_FALSE
  MULTIPLE_CHOICE
}

type Manufacturer {
  id: ID!
  name: String!
  models: [CarModel!]!
}

type CarModel {
  id: ID!
  name: String!
}

input CarCreateInput {
  manufacturerID: String!
  modelID: String!
  categoryID: String!
  year: Int!
  mileage: Int!
  photos: [String!]!
  featuresIDs: [String!]
}

# Ad
# ------------------------------------------------------

type Ad {
  id: ID!
  creator: User @private
  offers: [Offer!]!
  priceLowerBound: Float
  priceHigherBound: Float
  manufacturer: Manufacturer
  model: CarModel
  category: CarCategory
  mileageLowerBound: Int
  mileageHigherBound: Int
  yearLowerBound: Int
  yearHigherBound: Int
  features: [CarFeature!]
  isUrgent: Boolean!
  isFirst: Boolean!
  status: AdStatus!
}

input AdCreateInput {
  priceLowerBound: Float
  priceHigherBound: Float
  manufacturerID: ID
  modelID: ID
  categoryID: ID
  mileageLowerBound: Int
  mileageHigherBound: Int
  yearLowerBound: Int
  yearHigherBound: Int
  features: [ID!]
}

input AdUpdateInput {
  id: ID!
  priceLowerBound: Float
  priceHigherBound: Float
  manufacturerID: ID
  modelID: ID
  categoryID: ID
  mileageLowerBound: Int
  mileageHigherBound: Int
  yearLowerBound: Int
  yearHigherBound: Int
  features: [ID!]
}

enum AdStatus {
  PUBLISHED
  ACCEPTED
  DELETED
}

enum AdFeatureImportance {
  LOW
  MEDIUM
  HIGH
}

type AdPosition{
  ad: Ad
  position: Int
  score: Int
}

# Offer
# ------------------------------------------------------

type Offer {
  id: ID!
  creator: User @private
  ad: Ad!
  car: Car!
  price: Float!
  status: OfferStatus!
  finalRank: Int
  addons: [OfferAddon!]
  conversation: Conversation
}

enum OfferStatus {
  PUBLISHED
  ACCEPTED
  DELETED
}

input OfferCreateInput {
  adID: String!
  carID: String!
  price: Float!
  addons: [OfferAddonInput!]
}

input OfferUpdateInput {
  id: ID!
  price: Float
  addons: [OfferAddonInput!]
}

type OfferAddon {
  id: ID!
  name: String!
  rankValue: Int!
}

input OfferAddonInput {
  id: ID
  name: String
  rankValue: Int
}

type OfferPosition {
  offer: Offer
  position: Int
  score: Int
}

# Conversation
# ------------------------------------------------------

type Conversation {
  id: ID!
  buyer: User @private
  seller: User @private
  offer: Offer!
  messages: [Message!]!
}

# Message
# ------------------------------------------------------

type Message {
  id: ID!
  sender: User!
  text: String!
  image: String
  conversation: Conversation!
}

input SendMessageInput {
  conversationID: ID!
  text: String!
  image: String
}

# Util
# ------------------------------------------------------

type Date {
  day: Int!
  month: Int!
  year: Int!
}

input DateInput {
  day: Int!
  month: Int!
  year: Int!
}

type Subscription {
  messageSubscription: Message
}

type Post {
  id: ID!
  published: Boolean!
  title: String!
  content: String!
  author: User!
}

