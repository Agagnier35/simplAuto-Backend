type Post {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean! @default(value: "false")
  title: String!
  content: String!
  author: User!
}

type User {
  id: ID! @unique
  email: String! @unique
  firstName: String!
  lastName: String!
  password: String!
  location: String!
  birthDate: Date!
  gender: Gender!
  permissions: [Permission!]!
  offers: [Offer!]!
  ads: [Ad!]!
  cars: [Car!]!
  resetToken: String
  resetTokenExpiry: Float
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Permission {
  USER
  PREMIUM
  ADMIN
}

type Ad {
  id: ID! @unique
  creator: User!
  createdAt: DateTime!
  updatedAt: DateTime!
  offers: [Offer!]
  priceLowerBoundFeature: PriceBoundFeature
    @relation(name: "PriceLowerBoundFeature")
  priceHigherBoundFeature: PriceBoundFeature
    @relation(name: "PriceHigherBoundFeature")
  manufacturerFeature: ManufacturerFeature
  modelFeature: ModelFeature
  categoryFeature: CategoryFeature
  mileageLowerBoundFeature: MileageBoundFeature
    @relation(name: "MileageLowerBoundFeature")
  mileageHigherBoundFeature: MileageBoundFeature
    @relation(name: "MileageHigherBoundFeature")
  yearLowerBoundFeature: YearBoundFeature
    @relation(name: "YearLowerBoundFeature")
  yearHigherBoundFeature: YearBoundFeature
    @relation(name: "YearHigherBoundFeature")
  features: [AdCarFeature!]
  isUrgent: Boolean! @default(value: false)
  isFirst: Boolean! @default(value: false)
  status: AdStatus! @default(value: PUBLISHED)
}

type Date {
  day: Int!
  month: Int!
  year: Int!
}

enum AdStatus {
  PUBLISHED
  ACCEPTED
  DELETED
}

type PriceBoundFeature {
  id: ID! @unique
  price: Float!
  importance: AdCarFeatureImportance @default(value: MEDIUM)
}

type ManufacturerFeature {
  id: ID! @unique
  manufacturer: Manufacturer!
  importance: AdCarFeatureImportance @default(value: MEDIUM)
}

type ModelFeature {
  id: ID! @unique
  model: CarModel!
  importance: AdCarFeatureImportance @default(value: MEDIUM)
}

type CategoryFeature {
  id: ID! @unique
  category: CarCategory!
  importance: AdCarFeatureImportance @default(value: MEDIUM)
}

type MileageBoundFeature {
  id: ID! @unique
  mileage: Int!
  importance: AdCarFeatureImportance @default(value: MEDIUM)
}

type YearBoundFeature {
  id: ID! @unique
  year: Int!
  importance: AdCarFeatureImportance @default(value: MEDIUM)
}

type AdCarFeature {
  id: ID! @unique
  feature: CarFeature!
  importance: AdCarFeatureImportance @default(value: MEDIUM)
}

enum AdCarFeatureImportance {
  LOW
  MEDIUM
  HIGH
}

type Offer {
  id: ID! @unique
  creator: User!
  createdAt: DateTime!
  updatedAt: DateTime!
  ad: Ad!
  car: Car!
  price: Float!
  status: OfferStatus! @default(value: PUBLISHED)
  finalRank: Int
}

enum OfferStatus {
  PUBLISHED
  ACCEPTED
  DELETED
}

type Car {
  id: ID! @unique
  owner: User!
  manufacturer: Manufacturer!
  model: CarModel!
  category: CarCategory!
  year: Int!
  mileage: Int!
  photos: [String!]!
  features: [CarFeature!]!
  status: CarStatus!  @default(value: PUBLISHED)
}

enum CarStatus {
  PUBLISHED
  SOLD
  DELETED
}

enum CarFeatureType {
  TRUE_FALSE
  MULTIPLE_CHOICE
}

type CarCategory {
  id: ID! @unique
  name: String!
}

type CarFeatureCategory {
  id: ID! @unique
  name: String! @unique
  type: CarFeatureType!
  features: [CarFeature!]!
}

type CarFeature {
  id: ID! @unique
  name: String!
  category: CarFeatureCategory!
}

type Manufacturer {
  id: ID! @unique
  name: String!
  models: [CarModel!]!
}

type CarModel {
  id: ID! @unique
  name: String!
}
